import telebot
import yfinance as yf
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

bot = telebot.TeleBot('8028665251:AAG54py-DQvxYZDjexSmejVWFMl9nRMpvfU')

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –ø–æ chat_id
portfolios = {}  # {chat_id: {ticker: quantity}}

# –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç (–ø—Ä–∏–º–µ—Ä–Ω—ã–µ, –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
USD_TO_EUR = 0.93  # 1 USD = 0.93 EUR
USD_TO_UAH = 41.5  # 1 USD = 41.5 UAH


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def create_action_markup():
    markup = InlineKeyboardMarkup(row_width=1)
    btn1 = InlineKeyboardButton("–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ", callback_data='portfolio')
    btn2 = InlineKeyboardButton("–û–±–Ω–æ–≤–∏—Ç—å –∫–æ—Ç–∏—Ä–æ–≤–∫–∏", callback_data='refresh')
    markup.add(btn1, btn2)
    return markup


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ—Å–ª–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
def create_portfolio_menu():
    markup = InlineKeyboardMarkup(row_width=1)
    btn1 = InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='back')
    btn2 = InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –∞–∫—Ü–∏–∏", callback_data='add_stocks')
    btn3 = InlineKeyboardButton("–£–¥–∞–ª–∏—Ç—å –∞–∫—Ü–∏–∏", callback_data='remove_stocks')
    markup.add(btn1, btn2, btn3)
    return markup


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø—Ä–∏ –ø—É—Å—Ç–æ–º –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
def create_empty_portfolio_menu():
    markup = InlineKeyboardMarkup(row_width=1)
    btn = InlineKeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ", callback_data='add_to_portfolio')
    markup.add(btn)
    return markup


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
def start(message):
    chat_id = message.chat.id
    if chat_id not in portfolios:
        portfolios[chat_id] = {}
    bot.send_message(chat_id,
                     "–ü—Ä–∏–≤–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /setportfolio –¥–ª—è –∑–∞–¥–∞–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, AAPL 0.25 GOOGL 5.75), –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ '–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.")
    bot.register_next_step_handler(message, process_stock_input)


@bot.message_handler(commands=['start'])
def on_start(message):
    start(message)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /setportfolio
@bot.message_handler(commands=['setportfolio'])
def set_portfolio(message):
    chat_id = message.chat.id
    if chat_id not in portfolios:
        portfolios[chat_id] = {}
    bot.send_message(chat_id,
                     "–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä—ã –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, AAPL 0.25 GOOGL 5.75). –î–æ–ø—É—Å–∫–∞—é—Ç—Å—è –¥—Ä–æ–±–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, –≤–∫–ª—é—á–∞—è –º–∞–ª—ã–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 0.25).")
    bot.register_next_step_handler(message, process_set_portfolio)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
def process_set_portfolio(message):
    chat_id = message.chat.id
    try:
        if chat_id not in portfolios:
            portfolios[chat_id] = {}
        parts = message.text.split()
        if len(parts) % 2 != 0:
            raise ValueError("–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä—ã –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–ø–∞—Ä–Ω–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä, AAPL 0.25 GOOGL 5.75.")

        for i in range(0, len(parts), 2):
            ticker = parts[i].upper()
            quantity_str = parts[i + 1].replace(',', '.')  # –ó–∞–º–µ–Ω—è–µ–º –∑–∞–ø—è—Ç—É—é –Ω–∞ —Ç–æ—á–∫—É
            try:
                quantity = float(quantity_str)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ float
                if quantity <= 0:  # –†–∞–∑—Ä–µ—à–∞–µ–º –ª—é–±—ã–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, –≤–∫–ª—é—á–∞—è 0.25
                    raise ValueError(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è {ticker} –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, 0.25 –∏ –≤—ã—à–µ).")
                portfolios[chat_id][ticker] = portfolios[chat_id].get(ticker,
                                                                      0) + quantity  # –°—É–º–º–∏—Ä—É–µ–º, –µ—Å–ª–∏ —Ç–∏–∫–µ—Ä —É–∂–µ –µ—Å—Ç—å
                bot.send_message(chat_id, f"–î–æ–±–∞–≤–ª–µ–Ω–æ: {ticker} - {quantity} –∞–∫—Ü–∏–π (–æ—Ç–ª–∞–¥–∫–∞).")
            except ValueError as e:
                raise ValueError(
                    f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è {ticker}: {parts[i + 1]}. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 0.25).")

        bot.send_message(chat_id,
                         f"–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ! –¢–µ–∫—É—â–∏–µ –∞–∫—Ü–∏–∏: {', '.join([f'{t} ({q:.4f})' for t, q in portfolios[chat_id].items()])}. –ù–∞–∂–º–∏—Ç–µ '–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.",
                         reply_markup=create_action_markup())
        print(f"–û—Ç–ª–∞–¥–∫–∞: portfolios[{chat_id}] = {portfolios[chat_id]}")  # –û—Ç–ª–∞–¥–∫–∞ –≤ –∫–æ–Ω—Å–æ–ª–∏
    except ValueError as e:
        bot.send_message(chat_id, str(e))
        bot.register_next_step_handler(message, set_portfolio)
    except Exception as e:
        bot.send_message(chat_id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        bot.register_next_step_handler(message, set_portfolio)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ (–æ—Å—Ç–∞–≤–∏–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
def process_stock_input(message):
    chat_id = message.chat.id
    try:
        parts = message.text.split()
        if len(parts) != 2:
            raise ValueError(
                "–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª, –Ω–∞–ø—Ä–∏–º–µ—Ä, AAPL 0.25, –Ω–æ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Å–µ–π—á–∞—Å –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–∫—É–ø–∫–∏.")

        ticker, quantity_str = parts[0].upper(), parts[1].replace(',', '.')
        quantity = float(quantity_str)
        if quantity <= 0:
            raise ValueError("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, 0.25 –∏ –≤—ã—à–µ).")

        stock = yf.Ticker(ticker)
        history = stock.history(period="1d")
        if history.empty:
            raise ValueError(f"–î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–∏–∫–µ—Ä–∞ {ticker} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.")
        current_price = history['Close'].iloc[-1]
        if current_price <= 0:
            raise ValueError(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Ü–µ–Ω–∞ –¥–ª—è {ticker}.")

        stock_data = {'ticker': ticker, 'price': current_price}
        bot.send_message(chat_id,
                         f"–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ {ticker}: {current_price:.2f} USD. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /setportfolio –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ.",
                         reply_markup=create_action_markup())
    except ValueError as e:
        bot.send_message(chat_id, str(e))
        bot.register_next_step_handler(message, start)
    except Exception as e:
        bot.send_message(chat_id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        bot.register_next_step_handler(message, start)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback
def callback(call):
    chat_id = call.message.chat.id
    try:
        if call.data == 'portfolio':
            if chat_id not in portfolios or not portfolios[chat_id]:
                bot.send_message(chat_id, "–í–∞—à–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –ø—É—Å—Ç–æ.", reply_markup=create_empty_portfolio_menu())
            else:
                portfolio_msg = "–í–∞—à–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ:\n"
                total_value_usd = 0
                for ticker, qty in portfolios[chat_id].items():
                    stock = yf.Ticker(ticker)
                    history = stock.history(period="1d")
                    current_price_usd = history['Close'].iloc[-1]
                    open_price_usd = history['Open'].iloc[-1]
                    change_usd = current_price_usd - open_price_usd
                    change_percent = (change_usd / open_price_usd) * 100 if open_price_usd != 0 else 0
                    trend = "üìà –†–æ—Å—Ç" if change_usd > 0 else "üìâ –ü–∞–¥–µ–Ω–∏–µ" if change_usd < 0 else "–ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
                    stock_value_usd = qty * current_price_usd
                    total_value_usd += stock_value_usd
                    current_price_eur = current_price_usd * USD_TO_EUR
                    current_price_uah = current_price_usd * USD_TO_UAH
                    portfolio_msg += f"{ticker}: {qty:.4f} –∞–∫—Ü–∏–π, –¶–µ–Ω–∞: {current_price_usd:.2f} USD / {current_price_eur:.2f} EUR / {current_price_uah:.2f} UAH, –ò–∑–º–µ–Ω–µ–Ω–∏–µ: {change_usd:.2f} USD ({change_percent:.2f}%), {trend}, –ò—Ç–æ–≥–æ: {stock_value_usd:.2f} USD\n"
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–∑–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ (—Ä–æ—Å—Ç –∏–ª–∏ –ø–∞–¥–µ–Ω–∏–µ –Ω–∞ 10% –∏ –±–æ–ª–µ–µ)
                    if abs(change_percent) >= 10:
                        notification = f"‚ö†Ô∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: –ê–∫—Ü–∏—è {ticker} –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –Ω–∞ {change_percent:.2f}% ({'—Ä–æ—Å—Ç' if change_usd > 0 else '–ø–∞–¥–µ–Ω–∏–µ'})!"
                        bot.send_message(chat_id, notification)
                total_value_eur = total_value_usd * USD_TO_EUR  # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤ –µ–≤—Ä–æ
                portfolio_msg += f"\n–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ: {total_value_eur:.2f} EUR"
                bot.send_message(chat_id, portfolio_msg, reply_markup=create_portfolio_menu())
        elif call.data == 'refresh':
            if chat_id not in portfolios or not portfolios[chat_id]:
                bot.send_message(chat_id, "–í–∞—à–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –ø—É—Å—Ç–æ.", reply_markup=create_empty_portfolio_menu())
            else:
                portfolio_msg = "–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ—Ç–∏—Ä–æ–≤–∫–∏:\n"
                total_value_usd = 0
                for ticker, qty in portfolios[chat_id].items():
                    stock = yf.Ticker(ticker)
                    history = stock.history(period="1d")
                    current_price_usd = history['Close'].iloc[-1]
                    open_price_usd = history['Open'].iloc[-1]
                    change_usd = current_price_usd - open_price_usd
                    change_percent = (change_usd / open_price_usd) * 100 if open_price_usd != 0 else 0
                    trend = "üìà –†–æ—Å—Ç" if change_usd > 0 else "üìâ –ü–∞–¥–µ–Ω–∏–µ" if change_usd < 0 else "–ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
                    stock_value_usd = qty * current_price_usd
                    total_value_usd += stock_value_usd
                    current_price_eur = current_price_usd * USD_TO_EUR
                    current_price_uah = current_price_usd * USD_TO_UAH
                    portfolio_msg += f"{ticker}: {qty:.4f} –∞–∫—Ü–∏–π, –¶–µ–Ω–∞: {current_price_usd:.2f} USD / {current_price_eur:.2f} EUR / {current_price_uah:.2f} UAH, –ò–∑–º–µ–Ω–µ–Ω–∏–µ: {change_usd:.2f} USD ({change_percent:.2f}%), {trend}, –ò—Ç–æ–≥–æ: {stock_value_usd:.2f} USD\n"
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–∑–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ (—Ä–æ—Å—Ç –∏–ª–∏ –ø–∞–¥–µ–Ω–∏–µ –Ω–∞ 10% –∏ –±–æ–ª–µ–µ)
                    if abs(change_percent) >= 10:
                        notification = f"‚ö†Ô∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: –ê–∫—Ü–∏—è {ticker} –∏–∑–º–µ–Ω–∏–ª–∞—Å—å –Ω–∞ {change_percent:.2f}% ({'—Ä–æ—Å—Ç' if change_usd > 0 else '–ø–∞–¥–µ–Ω–∏–µ'})!"
                        bot.send_message(chat_id, notification)
                total_value_eur = total_value_usd * USD_TO_EUR  # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –≤ –µ–≤—Ä–æ
                portfolio_msg += f"\n–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ: {total_value_eur:.2f} EUR"
                bot.send_message(chat_id, portfolio_msg, reply_markup=create_action_markup())
        elif call.data == 'back':
            bot.send_message(chat_id, "–í–µ—Ä–Ω—É–ª–∏—Å—å –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –º–µ–Ω—é.", reply_markup=create_action_markup())
        elif call.data == 'add_stocks':
            bot.send_message(chat_id,
                             "–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä—ã –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, AAPL 0.25 GOOGL 5.75) –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–∫—Ü–∏–π.",
                             reply_markup=create_action_markup())
            bot.register_next_step_handler(call.message, process_set_portfolio)
        elif call.data == 'add_to_portfolio':
            bot.send_message(chat_id,
                             "–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä—ã –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, AAPL 0.25 GOOGL 5.75) –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ.",
                             reply_markup=create_action_markup())
            bot.register_next_step_handler(call.message, process_set_portfolio)
        elif call.data == 'remove_stocks':
            bot.send_message(chat_id,
                             "–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, AAPL 0.25) –∏–ª–∏ —Ç–∏–∫–µ—Ä –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, AAPL).",
                             reply_markup=create_action_markup())
            bot.register_next_step_handler(call.message, process_remove_stocks)
    except Exception as e:
        bot.send_message(chat_id, f"–û—à–∏–±–∫–∞: {e}")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∞–∫—Ü–∏–π
def process_remove_stocks(message):
    chat_id = message.chat.id
    try:
        parts = message.text.split()
        if len(parts) not in (1, 2):
            raise ValueError("–í–≤–µ–¥–∏—Ç–µ —Ç–∏–∫–µ—Ä –∏–ª–∏ —Ç–∏–∫–µ—Ä –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, AAPL 0.25 –∏–ª–∏ AAPL).")

        ticker = parts[0].upper()
        if chat_id not in portfolios or ticker not in portfolios[chat_id]:
            raise ValueError(f"–¢–∏–∫–µ—Ä {ticker} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≤–∞—à–µ–º –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ.")

        if len(parts) == 1:
            del portfolios[chat_id][ticker]  # –ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∞–∫—Ü–∏–∏
            bot.send_message(chat_id, f"–ê–∫—Ü–∏—è {ticker} –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ.")
        else:
            quantity_str = parts[1].replace(',', '.')  # –ó–∞–º–µ–Ω—è–µ–º –∑–∞–ø—è—Ç—É—é –Ω–∞ —Ç–æ—á–∫—É
            try:
                quantity = float(quantity_str)
                if quantity <= 0:
                    raise ValueError("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, 0.25 –∏ –≤—ã—à–µ).")
                if quantity > portfolios[chat_id][ticker]:
                    raise ValueError(
                        f"–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å {quantity} –∞–∫—Ü–∏–π, —Ç–∞–∫ –∫–∞–∫ –≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Ç–æ–ª—å–∫–æ {portfolios[chat_id][ticker]}.")
                portfolios[chat_id][ticker] -= quantity
                if portfolios[chat_id][ticker] == 0:
                    del portfolios[chat_id][ticker]
                bot.send_message(chat_id, f"–£–¥–∞–ª–µ–Ω–æ {quantity} –∞–∫—Ü–∏–π {ticker} –∏–∑ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ.")
            except ValueError as e:
                raise ValueError(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è {ticker}: {parts[1]}. {str(e)}")

        if not portfolios[chat_id]:
            bot.send_message(chat_id, "–í–∞—à–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Ç–µ–ø–µ—Ä—å –ø—É—Å—Ç–æ.", reply_markup=create_empty_portfolio_menu())
        else:
            bot.send_message(chat_id,
                             f"–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ! –¢–µ–∫—É—â–∏–µ –∞–∫—Ü–∏–∏: {', '.join([f'{t} ({q:.4f})' for t, q in portfolios[chat_id].items()])}.",
                             reply_markup=create_action_markup())
        print(f"–û—Ç–ª–∞–¥–∫–∞: portfolios[{chat_id}] = {portfolios[chat_id]}")  # –û—Ç–ª–∞–¥–∫–∞ –≤ –∫–æ–Ω—Å–æ–ª–∏
    except ValueError as e:
        bot.send_message(chat_id, str(e))
        bot.register_next_step_handler(message, process_remove_stocks)
    except Exception as e:
        bot.send_message(chat_id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        bot.register_next_step_handler(message, process_remove_stocks)


bot.callback_query_handler(func=lambda call: True)(callback)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(non_stop=True)